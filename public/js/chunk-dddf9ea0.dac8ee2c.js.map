{"version":3,"sources":["webpack:///./src/components/CourseComponents/CourseTest/ExcelImportComponent.vue?e5d8","webpack:///./src/components/CourseComponents/CourseTest/ExcelImportComponent.vue?182c","webpack:///src/components/CourseComponents/CourseTest/ExcelImportComponent.vue","webpack:///./src/components/CourseComponents/CourseTest/ExcelImportComponent.vue?f5a3","webpack:///./src/components/CourseComponents/CourseTest/ExcelImportComponent.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","attrs","on","handleClick","handleDrop","handleDragover","_v","staticRenderFns","props","beforeUpload","Function","onSuccess","data","loading","excelData","header","results","methods","generateData","e","stopPropagation","preventDefault","files","length","isExcel","rawFile","$message","error","upload","dataTransfer","dropEffect","handleUpload","$refs","click","value","before","readerData","Promise","reader","onload","resolve","readAsArrayBuffer","getHeaderRow","C","range","s","c","cell","t","hdr","headers","push","test","file","name","component"],"mappings":"kHAAA,yBAAuhB,EAAG,G,2CCA1hB,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACE,IAAI,qBAAqBC,YAAY,qBAAqBC,MAAM,CAAC,KAAO,OAAO,OAAS,eAAeC,GAAG,CAAC,OAAST,EAAIU,eAAeN,EAAG,MAAM,CAACG,YAAY,OAAOE,GAAG,CAAC,KAAOT,EAAIW,WAAW,SAAWX,EAAIY,eAAe,UAAYZ,EAAIY,iBAAiB,CAACZ,EAAIa,GAAG,2CACvXC,EAAkB,G,2CCoBtB,GACEC,MAAO,CACLC,aAAcC,SACdC,UAAWD,UAEbE,KALF,WAMI,MAAO,CACLC,SAAS,EACTC,UAAW,CACTC,OAAQ,KACRC,QAAS,QAIfC,QAAS,CACPC,aADJ,YACA,2BACMxB,KAAKoB,UAAUC,OAASA,EACxBrB,KAAKoB,UAAUE,QAAUA,EACzBtB,KAAKiB,WAAajB,KAAKiB,UAAUjB,KAAKoB,YAExCV,WANJ,SAMA,GAGM,GAFAe,EAAEC,kBACFD,EAAEE,kBACE3B,KAAKmB,QAAT,CACA,IAAN,uBACM,GAAqB,IAAjBS,EAAMC,OAAV,CAIA,IAAN,OACM,IAAK7B,KAAK8B,QAAQC,GAEhB,OADA/B,KAAKgC,SAASC,MAAM,wDACb,EAETjC,KAAKkC,OAAOH,GACZN,EAAEC,kBACFD,EAAEE,sBAVA3B,KAAKgC,SAASC,MAAM,sCAYxBtB,eAxBJ,SAwBA,GACMc,EAAEC,kBACFD,EAAEE,iBACFF,EAAEU,aAAaC,WAAa,QAE9BC,aA7BJ,WA8BMrC,KAAKsC,MAAM,sBAAsBC,SAEnC9B,YAhCJ,SAgCA,GACM,IAAN,iBACA,OACWsB,GACL/B,KAAKkC,OAAOH,IAEdG,OAtCJ,SAsCA,GAEM,GADAlC,KAAKsC,MAAM,sBAAsBE,MAAQ,KACpCxC,KAAKe,aAAV,CAIA,IAAN,uBACU0B,GACFzC,KAAK0C,WAAWX,QALhB/B,KAAK0C,WAAWX,IAQpBW,WAjDJ,SAiDA,cAEM,OADA1C,KAAKmB,SAAU,EACR,IAAIwB,SAAQ,SAAzB,KACQ,IAAR,iBACQC,EAAOC,OAAS,SAAxB,GACU,IAAV,kBACA,6BACA,kBACA,cACA,oBACA,6BACU,EAAV,mCACU,EAAV,WACUC,KAEFF,EAAOG,kBAAkBhB,OAG7BiB,aAnEJ,SAmEA,GACM,IAEN,EAFA,KACA,oCAEA,QACM,IAAKC,EAAIC,EAAMC,EAAEC,EAAGH,GAAKC,EAAMzB,EAAE2B,IAAKH,EAAG,CACvC,IAAR,sCACA,eACYI,GAAQA,EAAKC,IAAGC,EAAM,EAAlC,wBACQC,EAAQC,KAAKF,GAEf,OAAOC,GAET1B,QAhFJ,SAgFA,GACM,MAAO,oBAAoB4B,KAAKC,EAAKC,SCpHiV,I,wBCQxXC,EAAY,eACd,EACA/D,EACAe,GACA,EACA,KACA,WACA,MAIa,aAAAgD,E","file":"js/chunk-dddf9ea0.dac8ee2c.js","sourcesContent":["import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExcelImportComponent.vue?vue&type=style&index=0&id=c623fd22&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExcelImportComponent.vue?vue&type=style&index=0&id=c623fd22&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('input',{ref:\"excel-upload-input\",staticClass:\"excel-upload-input\",attrs:{\"type\":\"file\",\"accept\":\".xlsx, .xls\"},on:{\"change\":_vm.handleClick}}),_c('div',{staticClass:\"drop\",on:{\"drop\":_vm.handleDrop,\"dragover\":_vm.handleDragover,\"dragenter\":_vm.handleDragover}},[_vm._v(\" Перетащите файл с вопросами сюда \")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <input\r\n      ref=\"excel-upload-input\"\r\n      class=\"excel-upload-input\"\r\n      type=\"file\"\r\n      accept=\".xlsx, .xls\"\r\n      @change=\"handleClick\"\r\n    />\r\n    <div\r\n      class=\"drop\"\r\n      @drop=\"handleDrop\"\r\n      @dragover=\"handleDragover\"\r\n      @dragenter=\"handleDragover\"\r\n    >\r\n      Перетащите файл с вопросами сюда\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport XLSX from 'xlsx'\r\nexport default {\r\n  props: {\r\n    beforeUpload: Function,\r\n    onSuccess: Function\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      excelData: {\r\n        header: null,\r\n        results: null\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    generateData({ header, results }) {\r\n      this.excelData.header = header\r\n      this.excelData.results = results\r\n      this.onSuccess && this.onSuccess(this.excelData)\r\n    },\r\n    handleDrop(e) {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      if (this.loading) return\r\n      const files = e.dataTransfer.files\r\n      if (files.length !== 1) {\r\n        this.$message.error('Only support uploading one file!')\r\n        return\r\n      }\r\n      const rawFile = files[0]\r\n      if (!this.isExcel(rawFile)) {\r\n        this.$message.error('Only supports upload .xlsx, .xls, .csv suffix files')\r\n        return false\r\n      }\r\n      this.upload(rawFile)\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n    },\r\n    handleDragover(e) {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      e.dataTransfer.dropEffect = 'copy'\r\n    },\r\n    handleUpload() {\r\n      this.$refs['excel-upload-input'].click()\r\n    },\r\n    handleClick(e) {\r\n      const files = e.target.files\r\n      const rawFile = files[0]\r\n      if (!rawFile) return\r\n      this.upload(rawFile)\r\n    },\r\n    upload(rawFile) {\r\n      this.$refs['excel-upload-input'].value = null\r\n      if (!this.beforeUpload) {\r\n        this.readerData(rawFile)\r\n        return\r\n      }\r\n      const before = this.beforeUpload(rawFile)\r\n      if (before) {\r\n        this.readerData(rawFile)\r\n      }\r\n    },\r\n    readerData(rawFile) {\r\n      this.loading = true\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.onload = e => {\r\n          const data = e.target.result\r\n          const workbook = XLSX.read(data, { type: 'array' })\r\n          const firstSheetName = workbook.SheetNames[0]\r\n          const worksheet = workbook.Sheets[firstSheetName]\r\n          const header = this.getHeaderRow(worksheet)\r\n          const results = XLSX.utils.sheet_to_json(worksheet)\r\n          this.generateData({ header, results })\r\n          this.loading = false\r\n          resolve()\r\n        }\r\n        reader.readAsArrayBuffer(rawFile)\r\n      })\r\n    },\r\n    getHeaderRow(sheet) {\r\n      const headers = []\r\n      const range = XLSX.utils.decode_range(sheet['!ref'])\r\n      let C\r\n      const R = range.s.r\r\n      for (C = range.s.c; C <= range.e.c; ++C) {\r\n        const cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]\r\n        let hdr = 'UNKNOWN ' + C\r\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\r\n        headers.push(hdr)\r\n      }\r\n      return headers\r\n    },\r\n    isExcel(file) {\r\n      return /\\.(xlsx|xls|csv)$/.test(file.name)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n@import \"../../../assets/index.css\";\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExcelImportComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExcelImportComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ExcelImportComponent.vue?vue&type=template&id=c623fd22&scoped=true&\"\nimport script from \"./ExcelImportComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./ExcelImportComponent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ExcelImportComponent.vue?vue&type=style&index=0&id=c623fd22&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c623fd22\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}